name: Build APK

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          zip unzip openjdk-17-jdk \
          wget autoconf libtool \
          pkg-config zlib1g-dev \
          libncurses5 libtinfo5

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip wheel
        pip install cython==0.29.36 buildozer==1.5.0 kivy==2.3.0

    - name: Install Android SDK/NDK
      run: |
        # Instalar Command Line Tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-*.zip -d cmdline-tools
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/
        
        # Configurar entorno
        echo "ANDROID_SDK_ROOT=$(pwd)/cmdline-tools" >> $GITHUB_ENV
        echo "PATH=$(pwd)/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
        
        # Aceptar licencias
        yes | cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null 2>&1
        cmdline-tools/latest/bin/sdkmanager --install "build-tools;34.0.0" "platform-tools" "platforms;android-34"
        
        # Instalar NDK
        wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip -q android-ndk-r25b-linux.zip -d android-ndk
        echo "ANDROID_NDK_HOME=$(pwd)/android-ndk/android-ndk-r25b" >> $GITHUB_ENV

    - name: Configure build
      run: |
        # Configuración de Buildozer
        buildozer init
        echo -e "\n[buildozer]\nandroid.sdkmanager = $(pwd)/cmdline-tools/latest/bin/sdkmanager" >> buildozer.spec
        echo "android.ndk_path = $(pwd)/android-ndk/android-ndk-r25b" >> buildozer.spec
        echo "android.archs = arm64-v8a" >> buildozer.spec
        
        # Configuración adicional
        echo "p4a.branch = master" >> buildozer.spec
        echo "android.accept_sdk_license = True" >> buildozer.spec

    - name: Build APK
      run: |
        # Variables de entorno críticas
        export BUILD_FAILED=False
        export ANDROID_SDK_ROOT=$(pwd)/cmdline-tools
        export ANDROID_NDK_HOME=$(pwd)/android-ndk/android-ndk-r25b
        
        # Construir APK
        buildozer -v android debug || export BUILD_FAILED=True
        
        # Verificar resultado
        if [ "$BUILD_FAILED" = "True" ]; then
          echo "=== ERROR LOG ==="
          cat .buildozer/android/platform/build-arm64-v8a/dists/controlvencimientos/build/outputs/logs/manifest-merger-debug-report.txt
          exit 1
        fi
        
        ls -la bin/

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: App-Android
        path: bin/*.apk
